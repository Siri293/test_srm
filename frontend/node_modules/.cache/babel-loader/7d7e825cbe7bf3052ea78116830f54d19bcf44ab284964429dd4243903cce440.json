{"ast":null,"code":"var _jsxFileName = \"/Users/lakshmanmandapati/Downloads/final/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// --- Define the shared Types ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// --- Live Provider Component ---\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [subjects, setSubjects] = useState([]);\n\n  // On app startup: check for logged-in user\n  useEffect(() => {\n    try {\n      const storedUser = localStorage.getItem('studySphereUser');\n      if (storedUser) {\n        const parsedUser = JSON.parse(storedUser);\n        setUser(parsedUser);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${parsedUser.token}`;\n      }\n    } catch (error) {\n      console.error(\"Failed to parse user from localStorage\", error);\n      localStorage.removeItem('studySphereUser');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const fetchSubjects = useCallback(async () => {\n    if (user !== null && user !== void 0 && user.token) {\n      try {\n        const response = await axios.get('/api/subjects/');\n        setSubjects(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch subjects:\", error);\n        toast.error(\"Could not load your subjects.\");\n      }\n    }\n  }, [user]);\n\n  // Fetch subjects whenever user changes\n  useEffect(() => {\n    if (user) {\n      fetchSubjects();\n    } else {\n      setSubjects([]);\n    }\n  }, [user, fetchSubjects]);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        user: userData,\n        token\n      } = response.data;\n      const userWithToken = {\n        ...userData,\n        token\n      };\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(userWithToken);\n      localStorage.setItem('studySphereUser', JSON.stringify(userWithToken));\n      toast.success('Login successful!');\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed.');\n      return false;\n    }\n  };\n  const signup = async (email, password, academic_goal, focus_areas) => {\n    try {\n      const response = await axios.post('/api/auth/signup', {\n        email,\n        password,\n        academic_goal,\n        focus_areas\n      });\n      const {\n        user: userData,\n        token\n      } = response.data;\n      const userWithToken = {\n        ...userData,\n        token\n      };\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(userWithToken);\n      localStorage.setItem('studySphereUser', JSON.stringify(userWithToken));\n      toast.success('Account created successfully!');\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Signup failed.');\n      return false;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('studySphereUser');\n    delete axios.defaults.headers.common['Authorization'];\n    toast.success('You have been logged out.');\n  };\n  const value = {\n    user,\n    loading,\n    subjects,\n    setSubjects,\n    fetchSubjects,\n    login,\n    logout,\n    signup\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"whDOPXsR08ITrERcGx8HGjqis2A=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","axios","toast","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","subjects","setSubjects","storedUser","localStorage","getItem","parsedUser","JSON","parse","defaults","headers","common","token","error","console","removeItem","fetchSubjects","response","get","data","login","email","password","post","userData","userWithToken","setItem","stringify","success","_error$response","_error$response$data","signup","academic_goal","focus_areas","_error$response2","_error$response2$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lakshmanmandapati/Downloads/final/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\n// --- Define the shared Types ---\r\nexport interface Subject {\r\n  id: number;\r\n  name: string;\r\n  color: string;\r\n  user_id: number;\r\n}\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  role: 'student' | 'admin';\r\n  token: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  subjects: Subject[];\r\n  setSubjects: React.Dispatch<React.SetStateAction<Subject[]>>;\r\n  fetchSubjects: () => Promise<void>;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  signup: (email: string, password: string, academic_goal?: string, focus_areas?: string) => Promise<boolean>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// --- Live Provider Component ---\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [subjects, setSubjects] = useState<Subject[]>([]);\r\n\r\n  // On app startup: check for logged-in user\r\n  useEffect(() => {\r\n    try {\r\n      const storedUser = localStorage.getItem('studySphereUser');\r\n      if (storedUser) {\r\n        const parsedUser: User = JSON.parse(storedUser);\r\n        setUser(parsedUser);\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${parsedUser.token}`;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to parse user from localStorage\", error);\r\n      localStorage.removeItem('studySphereUser');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchSubjects = useCallback(async () => {\r\n    if (user?.token) {\r\n      try {\r\n        const response = await axios.get('/api/subjects/');\r\n        setSubjects(response.data);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch subjects:\", error);\r\n        toast.error(\"Could not load your subjects.\");\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  // Fetch subjects whenever user changes\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchSubjects();\r\n    } else {\r\n      setSubjects([]);\r\n    }\r\n  }, [user, fetchSubjects]);\r\n\r\n  const login = async (email: string, password: string): Promise<boolean> => {\r\n    try {\r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      const { user: userData, token } = response.data;\r\n      const userWithToken: User = { ...userData, token };\r\n\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(userWithToken);\r\n      localStorage.setItem('studySphereUser', JSON.stringify(userWithToken));\r\n\r\n      toast.success('Login successful!');\r\n      return true;\r\n    } catch (error: any) {\r\n      toast.error(error.response?.data?.error || 'Login failed.');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const signup = async (\r\n    email: string,\r\n    password: string,\r\n    academic_goal?: string,\r\n    focus_areas?: string\r\n  ): Promise<boolean> => {\r\n    try {\r\n      const response = await axios.post('/api/auth/signup', {\r\n        email,\r\n        password,\r\n        academic_goal,\r\n        focus_areas\r\n      });\r\n      const { user: userData, token } = response.data;\r\n      const userWithToken: User = { ...userData, token };\r\n\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(userWithToken);\r\n      localStorage.setItem('studySphereUser', JSON.stringify(userWithToken));\r\n\r\n      toast.success('Account created successfully!');\r\n      return true;\r\n    } catch (error: any) {\r\n      toast.error(error.response?.data?.error || 'Signup failed.');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('studySphereUser');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    toast.success('You have been logged out.');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    subjects,\r\n    setSubjects,\r\n    fetchSubjects,\r\n    login,\r\n    logout,\r\n    signup\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,EAAaC,WAAW,QAAQ,OAAO;AACrG,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,iBAAiB;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AA0BA,MAAMC,WAAW,gBAAGT,aAAa,CAA8BU,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGZ,UAAU,CAACQ,WAAW,CAAC;EACvC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,OAAO;AASpB,OAAO,MAAMI,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAY,EAAE,CAAC;;EAEvD;EACAC,SAAS,CAAC,MAAM;IACd,IAAI;MACF,MAAMqB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;MAC1D,IAAIF,UAAU,EAAE;QACd,MAAMG,UAAgB,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;QAC/CL,OAAO,CAACQ,UAAU,CAAC;QACnBtB,KAAK,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,UAAU,CAACM,KAAK,EAAE;MAC/E;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9DT,YAAY,CAACW,UAAU,CAAC,iBAAiB,CAAC;IAC5C,CAAC,SAAS;MACRf,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,aAAa,GAAGjC,WAAW,CAAC,YAAY;IAC5C,IAAIc,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEe,KAAK,EAAE;MACf,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,gBAAgB,CAAC;QAClDhB,WAAW,CAACe,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD5B,KAAK,CAAC4B,KAAK,CAAC,+BAA+B,CAAC;MAC9C;IACF;EACF,CAAC,EAAE,CAAChB,IAAI,CAAC,CAAC;;EAEV;EACAf,SAAS,CAAC,MAAM;IACd,IAAIe,IAAI,EAAE;MACRmB,aAAa,CAAC,CAAC;IACjB,CAAC,MAAM;MACLd,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC,EAAE,CAACL,IAAI,EAAEmB,aAAa,CAAC,CAAC;EAEzB,MAAMI,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAuB;IACzE,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMjC,KAAK,CAACuC,IAAI,CAAC,iBAAiB,EAAE;QAAEF,KAAK;QAAEC;MAAS,CAAC,CAAC;MACzE,MAAM;QAAEzB,IAAI,EAAE2B,QAAQ;QAAEZ;MAAM,CAAC,GAAGK,QAAQ,CAACE,IAAI;MAC/C,MAAMM,aAAmB,GAAG;QAAE,GAAGD,QAAQ;QAAEZ;MAAM,CAAC;MAElD5B,KAAK,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUC,KAAK,EAAE;MAClEd,OAAO,CAAC2B,aAAa,CAAC;MACtBrB,YAAY,CAACsB,OAAO,CAAC,iBAAiB,EAAEnB,IAAI,CAACoB,SAAS,CAACF,aAAa,CAAC,CAAC;MAEtExC,KAAK,CAAC2C,OAAO,CAAC,mBAAmB,CAAC;MAClC,OAAO,IAAI;IACb,CAAC,CAAC,OAAOf,KAAU,EAAE;MAAA,IAAAgB,eAAA,EAAAC,oBAAA;MACnB7C,KAAK,CAAC4B,KAAK,CAAC,EAAAgB,eAAA,GAAAhB,KAAK,CAACI,QAAQ,cAAAY,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBV,IAAI,cAAAW,oBAAA,uBAApBA,oBAAA,CAAsBjB,KAAK,KAAI,eAAe,CAAC;MAC3D,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMkB,MAAM,GAAG,MAAAA,CACbV,KAAa,EACbC,QAAgB,EAChBU,aAAsB,EACtBC,WAAoB,KACC;IACrB,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAMjC,KAAK,CAACuC,IAAI,CAAC,kBAAkB,EAAE;QACpDF,KAAK;QACLC,QAAQ;QACRU,aAAa;QACbC;MACF,CAAC,CAAC;MACF,MAAM;QAAEpC,IAAI,EAAE2B,QAAQ;QAAEZ;MAAM,CAAC,GAAGK,QAAQ,CAACE,IAAI;MAC/C,MAAMM,aAAmB,GAAG;QAAE,GAAGD,QAAQ;QAAEZ;MAAM,CAAC;MAElD5B,KAAK,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUC,KAAK,EAAE;MAClEd,OAAO,CAAC2B,aAAa,CAAC;MACtBrB,YAAY,CAACsB,OAAO,CAAC,iBAAiB,EAAEnB,IAAI,CAACoB,SAAS,CAACF,aAAa,CAAC,CAAC;MAEtExC,KAAK,CAAC2C,OAAO,CAAC,+BAA+B,CAAC;MAC9C,OAAO,IAAI;IACb,CAAC,CAAC,OAAOf,KAAU,EAAE;MAAA,IAAAqB,gBAAA,EAAAC,qBAAA;MACnBlD,KAAK,CAAC4B,KAAK,CAAC,EAAAqB,gBAAA,GAAArB,KAAK,CAACI,QAAQ,cAAAiB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBf,IAAI,cAAAgB,qBAAA,uBAApBA,qBAAA,CAAsBtB,KAAK,KAAI,gBAAgB,CAAC;MAC5D,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMuB,MAAM,GAAGA,CAAA,KAAM;IACnBtC,OAAO,CAAC,IAAI,CAAC;IACbM,YAAY,CAACW,UAAU,CAAC,iBAAiB,CAAC;IAC1C,OAAO/B,KAAK,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACrD1B,KAAK,CAAC2C,OAAO,CAAC,2BAA2B,CAAC;EAC5C,CAAC;EAED,MAAMS,KAAK,GAAG;IACZxC,IAAI;IACJE,OAAO;IACPE,QAAQ;IACRC,WAAW;IACXc,aAAa;IACbI,KAAK;IACLgB,MAAM;IACNL;EACF,CAAC;EAED,oBACE5C,OAAA,CAACC,WAAW,CAACkD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA1C,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAA4C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAC9C,GAAA,CAhHWF,YAA+C;AAAAiD,EAAA,GAA/CjD,YAA+C;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}