{"ast":null,"code":"var _jsxFileName = \"/Users/lakshmanmandapati/Downloads/final/frontend/src/contexts/SocketContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext(undefined);\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (context === undefined) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    user\n  } = useAuth();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    if (user && 'token' in user && user.token) {\n      const token = user.token;\n      const newSocket = io('http://localhost:5050', {\n        query: {\n          token\n        },\n        // For Flask-SocketIO compatibility\n        transports: ['websocket'] // Optional: to enforce websocket only\n      });\n      setSocket(newSocket);\n      newSocket.on('connect', () => {\n        setIsConnected(true);\n        console.log('✅ Socket connected:', newSocket.id);\n      });\n      newSocket.on('disconnect', () => {\n        setIsConnected(false);\n        console.log('⚠️ Socket disconnected');\n      });\n      newSocket.on('connect_error', err => {\n        console.error('❌ Socket connection error:', err.message);\n      });\n      return () => {\n        newSocket.disconnect();\n      };\n    }\n  }, [user]);\n  const value = {\n    socket,\n    isConnected\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"Lq2+8CNb/Js5HfPWSeCdGXPosD4=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsxDEV","_jsxDEV","SocketContext","undefined","useSocket","_s","context","Error","SocketProvider","children","_s2","user","socket","setSocket","isConnected","setIsConnected","token","newSocket","query","transports","on","console","log","id","err","error","message","disconnect","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lakshmanmandapati/Downloads/final/frontend/src/contexts/SocketContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\r\nimport io, { Socket } from 'socket.io-client';\r\nimport { useAuth } from './AuthContext';\r\n\r\ninterface SocketContextType {\r\n  socket: Socket | null;\r\n  isConnected: boolean;\r\n}\r\n\r\nconst SocketContext = createContext<SocketContextType | undefined>(undefined);\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SocketProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const { user } = useAuth();\r\n  const [socket, setSocket] = useState<Socket | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user && 'token' in user && (user as any).token) {\r\n      const token = (user as any).token;\r\n\r\n      const newSocket = io('http://localhost:5050', {\r\n        query: { token }, // For Flask-SocketIO compatibility\r\n        transports: ['websocket'], // Optional: to enforce websocket only\r\n      });\r\n\r\n      setSocket(newSocket);\r\n\r\n      newSocket.on('connect', () => {\r\n        setIsConnected(true);\r\n        console.log('✅ Socket connected:', newSocket.id);\r\n      });\r\n\r\n      newSocket.on('disconnect', () => {\r\n        setIsConnected(false);\r\n        console.log('⚠️ Socket disconnected');\r\n      });\r\n\r\n      newSocket.on('connect_error', (err) => {\r\n        console.error('❌ Socket connection error:', err.message);\r\n      });\r\n\r\n      return () => {\r\n        newSocket.disconnect();\r\n      };\r\n    }\r\n  }, [user]);\r\n\r\n  const value = { socket, isConnected };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAmB,OAAO;AACxF,OAAOC,EAAE,MAAkB,kBAAkB;AAC7C,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,aAAa,gBAAGR,aAAa,CAAgCS,SAAS,CAAC;AAE7E,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,OAAO,GAAGX,UAAU,CAACO,aAAa,CAAC;EACzC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,SAAS;AAQtB,OAAO,MAAMI,cAAiD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACjF,MAAM;IAAEC;EAAK,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd,IAAIe,IAAI,IAAI,OAAO,IAAIA,IAAI,IAAKA,IAAI,CAASK,KAAK,EAAE;MAClD,MAAMA,KAAK,GAAIL,IAAI,CAASK,KAAK;MAEjC,MAAMC,SAAS,GAAGnB,EAAE,CAAC,uBAAuB,EAAE;QAC5CoB,KAAK,EAAE;UAAEF;QAAM,CAAC;QAAE;QAClBG,UAAU,EAAE,CAAC,WAAW,CAAC,CAAE;MAC7B,CAAC,CAAC;MAEFN,SAAS,CAACI,SAAS,CAAC;MAEpBA,SAAS,CAACG,EAAE,CAAC,SAAS,EAAE,MAAM;QAC5BL,cAAc,CAAC,IAAI,CAAC;QACpBM,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEL,SAAS,CAACM,EAAE,CAAC;MAClD,CAAC,CAAC;MAEFN,SAAS,CAACG,EAAE,CAAC,YAAY,EAAE,MAAM;QAC/BL,cAAc,CAAC,KAAK,CAAC;QACrBM,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACvC,CAAC,CAAC;MAEFL,SAAS,CAACG,EAAE,CAAC,eAAe,EAAGI,GAAG,IAAK;QACrCH,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAED,GAAG,CAACE,OAAO,CAAC;MAC1D,CAAC,CAAC;MAEF,OAAO,MAAM;QACXT,SAAS,CAACU,UAAU,CAAC,CAAC;MACxB,CAAC;IACH;EACF,CAAC,EAAE,CAAChB,IAAI,CAAC,CAAC;EAEV,MAAMiB,KAAK,GAAG;IAAEhB,MAAM;IAAEE;EAAY,CAAC;EAErC,oBACEb,OAAA,CAACC,aAAa,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAClCA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACvB,GAAA,CA3CWF,cAAiD;EAAA,QAC3CT,OAAO;AAAA;AAAAmC,EAAA,GADb1B,cAAiD;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}